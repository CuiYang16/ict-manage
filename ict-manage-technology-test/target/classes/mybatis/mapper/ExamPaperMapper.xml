<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.dhcc.ict.manage.technology.test.dao.ExamPaperMapper">
	<resultMap id="BaseResultMap"
		type="com.dhcc.ict.manage.technology.test.pojo.ExamPaper">
		<constructor>
			<idArg column="exam_paper_id" jdbcType="INTEGER"
				javaType="java.lang.Integer" />
			<arg column="question_id" jdbcType="INTEGER"
				javaType="java.lang.Integer" />
			<arg column="question_true_answer" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="question_type" jdbcType="VARCHAR"
				javaType="java.lang.String" />
			<arg column="paper_flag" jdbcType="VARCHAR"
				javaType="java.lang.String" />
		</constructor>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		exam_paper_id, question_id, question_true_answer, question_type, paper_flag
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.dhcc.ict.manage.technology.test.pojo.ExamPaperExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from exam_paper
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from exam_paper
		where exam_paper_id = #{examPaperId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from exam_paper
		where exam_paper_id = #{examPaperId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.dhcc.ict.manage.technology.test.pojo.ExamPaperExample">
		delete from exam_paper
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.dhcc.ict.manage.technology.test.pojo.ExamPaper"
		useGeneratedKeys="true" keyProperty="examPaperId"
		keyColumn="exam_paper_id">
		insert into exam_paper (exam_paper_id, question_id, question_true_answer,
		question_type, paper_flag)
		values (#{examPaperId,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER},
		#{questionTrueAnswer,jdbcType=VARCHAR},
		#{questionType,jdbcType=VARCHAR}, #{paperFlag,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.dhcc.ict.manage.technology.test.pojo.ExamPaper">
		insert into exam_paper
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="examPaperId != null">
				exam_paper_id,
			</if>
			<if test="questionId != null">
				question_id,
			</if>
			<if test="questionTrueAnswer != null">
				question_true_answer,
			</if>
			<if test="questionType != null">
				question_type,
			</if>
			<if test="paperFlag != null">
				paper_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="examPaperId != null">
				#{examPaperId,jdbcType=INTEGER},
			</if>
			<if test="questionId != null">
				#{questionId,jdbcType=INTEGER},
			</if>
			<if test="questionTrueAnswer != null">
				#{questionTrueAnswer,jdbcType=VARCHAR},
			</if>
			<if test="questionType != null">
				#{questionType,jdbcType=VARCHAR},
			</if>
			<if test="paperFlag != null">
				#{paperFlag,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.dhcc.ict.manage.technology.test.pojo.ExamPaperExample"
		resultType="java.lang.Integer">
		select count(*) from exam_paper
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update exam_paper
		<set>
			<if test="record.examPaperId != null">
				exam_paper_id = #{record.examPaperId,jdbcType=INTEGER},
			</if>
			<if test="record.questionId != null">
				question_id = #{record.questionId,jdbcType=INTEGER},
			</if>
			<if test="record.questionTrueAnswer != null">
				question_true_answer = #{record.questionTrueAnswer,jdbcType=VARCHAR},
			</if>
			<if test="record.questionType != null">
				question_type = #{record.questionType,jdbcType=VARCHAR},
			</if>
			<if test="record.paperFlag != null">
				paper_flag = #{record.paperFlag,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update exam_paper
		set exam_paper_id = #{record.examPaperId,jdbcType=INTEGER},
		question_id = #{record.questionId,jdbcType=INTEGER},
		question_true_answer = #{record.questionTrueAnswer,jdbcType=VARCHAR},
		question_type = #{record.questionType,jdbcType=VARCHAR},
		paper_flag = #{record.paperFlag,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.dhcc.ict.manage.technology.test.pojo.ExamPaper">
		update exam_paper
		<set>
			<if test="questionId != null">
				question_id = #{questionId,jdbcType=INTEGER},
			</if>
			<if test="questionTrueAnswer != null">
				question_true_answer = #{questionTrueAnswer,jdbcType=VARCHAR},
			</if>
			<if test="questionType != null">
				question_type = #{questionType,jdbcType=VARCHAR},
			</if>
			<if test="paperFlag != null">
				paper_flag = #{paperFlag,jdbcType=VARCHAR},
			</if>
		</set>
		where exam_paper_id = #{examPaperId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.dhcc.ict.manage.technology.test.pojo.ExamPaper">
		update exam_paper
		set question_id = #{questionId,jdbcType=INTEGER},
		question_true_answer = #{questionTrueAnswer,jdbcType=VARCHAR},
		question_type = #{questionType,jdbcType=VARCHAR},
		paper_flag = #{paperFlag,jdbcType=VARCHAR}
		where exam_paper_id = #{examPaperId,jdbcType=INTEGER}
	</update>

	<!--管理员添加 -->
	<!-- 添加试卷 -->
	<insert id="insertPaper" parameterType="java.util.List">
		insert into exam_paper (question_id,
		question_true_answer,
		question_type, paper_flag) values
		<foreach collection="papers" item="papers" index="index"
			separator=",">
			(#{papers.questionId},
			#{papers.questionTrueAnswer},
			#{papers.questionType},
			#{papers.paperFlag}
			)
		</foreach>
	</insert>
</mapper>